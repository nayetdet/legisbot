services:
  postgres:
    image: postgres:latest
    container_name: legisbot_postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: legisbot
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - legisbot_postgres_data:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    container_name: legisbot_minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    entrypoint: >
      /bin/sh -c '
        isAlive() { curl -sf http://minio:9000/minio/health/live; }
        minio $0 "$@" --quiet & echo $! > /tmp/minio.pid
        until isAlive; do sleep 1; done
        echo "MinIO is ready. Proceeding with setup..."
        mc alias set myminio http://minio:9000 ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY}
        mc mb myminio/${MINIO_BUCKET} --ignore-existing
        mc anonymous set public myminio/${MINIO_BUCKET}
        kill -s INT $(cat /tmp/minio.pid) && rm /tmp/minio.pid
        while isAlive; do sleep 0.1; done
        exec minio $0 "$@"
      '
    command: server /data --console-address ":9001"
    volumes:
      - legisbot_minio_data:/data

  chroma:
    image: chromadb/chroma:latest
    container_name: legisbot_chroma
    ports:
      - "8080:8000"
    environment:
      IS_PERSISTENT: TRUE
      ANONYMIZED_TELEMETRY: FALSE
    volumes:
      - legisbot_chroma_data:/chroma/.chroma

  ollama:
    build:
      context: ./docker/ollama
      dockerfile: Dockerfile
      args:
        OLLAMA_LLM_MODEL: hf.co/unsloth/gemma-3-270m-it-GGUF:Q4_K_M
        OLLAMA_EMBEDDING_MODEL: bge-m3:567m
    tty: true
    container_name: legisbot_ollama_data
    ports:
      - "11434:11434"
    volumes:
      - legisbot_ollama_data:/root/.ollama

volumes:
  legisbot_postgres_data:
  legisbot_minio_data:
  legisbot_chroma_data:
  legisbot_ollama_data:
